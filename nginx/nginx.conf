worker_processes auto;

env REDIS_HOST;
env REDIS_PORT;
env BAN_TTL_SECONDS;
env CANARY_SET_KEY;
env BAN_REDIS_PREFIX;
env LOGIN_PATH_REGEX;

env ORIGIN_HOST;
env ORIGIN_PORT;

env ADMIN_TOKEN;
env ALLOW_ADMIN_CIDRS;
env ALLOW_IP_CIDRS;

env GEO_MODE;
env GEO_COUNTRIES;
env GEO_DB_PATH;

env ORIGIN_HOST;
env ORIGIN_PORT;

events { worker_connections 4096; }

http {
  lua_package_path '/usr/local/openresty/nginx/lua/?.lua;;';

  include       mime.types;
  default_type  application/octet-stream;
  sendfile      on;
  keepalive_timeout 65;
  client_max_body_size 2m;
  client_body_buffer_size 64k;

  log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                  '$status $body_bytes_sent "$http_referer" "$http_user_agent" '
                  'rt=$request_time uip=$http_x_forwarded_for ban=$sent_http_x-ban-reason';
  access_log /dev/stdout main;
  error_log  /dev/stderr warn;

  lua_shared_dict banlist 20m;
  lua_shared_dict cfg 1m;

  resolver 127.0.0.11 ipv6=off valid=60s;

  init_worker_by_lua_block {
    local waf = require "waf"
    waf.init_worker()
  }

  server {
    listen 80;
    server_name _;
    return 301 https://$host$request_uri;
  }

  server {
    listen 443 ssl;
    http2 on;
    server_name _;

    set_by_lua_block $origin_host { return os.getenv("ORIGIN_HOST") or "origin" }
    set_by_lua_block $origin_port { return os.getenv("ORIGIN_PORT") or "443" }

    ssl_certificate     /etc/ssl/waf/fullchain.pem;
    ssl_certificate_key /etc/ssl/waf/privkey.pem;
    ssl_session_cache   shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_protocols       TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;

    add_header Strict-Transport-Security "max-age=31536000" always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-Frame-Options DENY always;
    add_header Referrer-Policy no-referrer always;

    access_by_lua_block {
      local waf = require "waf"
      waf.access_phase()
    }

    location ^~ /admin {
      if ($request_method = OPTIONS) {
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods "GET,POST,DELETE,OPTIONS";
        add_header Access-Control-Allow-Headers "Content-Type,X-Admin-Token";
        add_header Access-Control-Max-Age 86400;
        return 204;
      }
      add_header Access-Control-Allow-Origin * always;
      add_header Access-Control-Allow-Headers "Content-Type,X-Admin-Token" always;

      default_type application/json;
      content_by_lua_block {
        local admin = require "admin"
        admin.handle()
      }
    }


    proxy_http_version 1.1;
    proxy_set_header Host               $host;
    proxy_set_header X-Forwarded-Proto  https;
    proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
    proxy_set_header Connection         "";
    proxy_ssl_server_name on;
    proxy_ssl_name $origin_host;
    proxy_read_timeout 30s;
    proxy_send_timeout 30s;

    location / { proxy_pass https://$origin_host:$origin_port; }

  }
}
